{
  "abi": [],
  "devdoc": {
    "details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "evm": {
    "assembly": "    /* \"SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ffc4300deaa9bc2d4dcca911ea3a944bcfe73db4e09d5e408c2fc0d341b3c9f564736f6c63430007060033\n}\n",
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {},
      "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ffc4300deaa9bc2d4dcca911ea3a944bcfe73db4e09d5e408c2fc0d341b3c9f564736f6c63430007060033",
      "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xC4 ADDRESS 0xD 0xEA 0xA9 0xBC 0x2D 0x4D 0xCC 0xA9 GT 0xEA GASPRICE SWAP5 0x4B 0xCF 0xE7 RETURNDATASIZE 0xB4 0xE0 SWAP14 0x5E BLOCKHASH DUP13 0x2F 0xC0 0xD3 COINBASE 0xB3 0xC9 CREATE2 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
      "sourceMap": "630:6594:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [],
      "immutableReferences": {},
      "linkReferences": {},
      "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ffc4300deaa9bc2d4dcca911ea3a944bcfe73db4e09d5e408c2fc0d341b3c9f564736f6c63430007060033",
      "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xC4 ADDRESS 0xD 0xEA 0xA9 0xBC 0x2D 0x4D 0xCC 0xA9 GT 0xEA GASPRICE SWAP5 0x4B 0xCF 0xE7 RETURNDATASIZE 0xB4 0xE0 SWAP14 0x5E BLOCKHASH DUP13 0x2F 0xC0 0xD3 COINBASE 0xB3 0xC9 CREATE2 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
      "sourceMap": "630:6594:4:-:0;;;;;;;;"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "17200",
        "executionCost": "97",
        "totalCost": "17297"
      },
      "internal": {
        "add(uint256,uint256)": "infinite",
        "div(uint256,uint256)": "infinite",
        "div(uint256,uint256,string memory)": "infinite",
        "mod(uint256,uint256)": "infinite",
        "mod(uint256,uint256,string memory)": "infinite",
        "mul(uint256,uint256)": "infinite",
        "sub(uint256,uint256)": "infinite",
        "sub(uint256,uint256,string memory)": "infinite",
        "tryAdd(uint256,uint256)": "infinite",
        "tryDiv(uint256,uint256)": "infinite",
        "tryMod(uint256,uint256)": "infinite",
        "tryMul(uint256,uint256)": "infinite",
        "trySub(uint256,uint256)": "infinite"
      }
    },
    "legacyAssembly": {
      ".code": [
        {
          "begin": 630,
          "end": 7224,
          "name": "PUSH #[$]",
          "source": 4,
          "value": "0000000000000000000000000000000000000000000000000000000000000000"
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "PUSH [$]",
          "source": 4,
          "value": "0000000000000000000000000000000000000000000000000000000000000000"
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "PUSH",
          "source": 4,
          "value": "B"
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "DUP3",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "DUP3",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "DUP3",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "CODECOPY",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "DUP1",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "MLOAD",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "PUSH",
          "source": 4,
          "value": "0"
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "BYTE",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "PUSH",
          "source": 4,
          "value": "73"
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "EQ",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "PUSH [tag]",
          "source": 4,
          "value": "1"
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "JUMPI",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "INVALID",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "tag",
          "source": 4,
          "value": "1"
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "JUMPDEST",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "ADDRESS",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "PUSH",
          "source": 4,
          "value": "0"
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "MSTORE",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "PUSH",
          "source": 4,
          "value": "73"
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "DUP2",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "MSTORE8",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "DUP3",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "DUP2",
          "source": 4
        },
        {
          "begin": 630,
          "end": 7224,
          "name": "RETURN",
          "source": 4
        }
      ],
      ".data": {
        "0": {
          ".auxdata": "a2646970667358221220ffc4300deaa9bc2d4dcca911ea3a944bcfe73db4e09d5e408c2fc0d341b3c9f564736f6c63430007060033",
          ".code": [
            {
              "begin": 630,
              "end": 7224,
              "name": "PUSHDEPLOYADDRESS",
              "source": 4
            },
            {
              "begin": 630,
              "end": 7224,
              "name": "ADDRESS",
              "source": 4
            },
            {
              "begin": 630,
              "end": 7224,
              "name": "EQ",
              "source": 4
            },
            {
              "begin": 630,
              "end": 7224,
              "name": "PUSH",
              "source": 4,
              "value": "80"
            },
            {
              "begin": 630,
              "end": 7224,
              "name": "PUSH",
              "source": 4,
              "value": "40"
            },
            {
              "begin": 630,
              "end": 7224,
              "name": "MSTORE",
              "source": 4
            },
            {
              "begin": 630,
              "end": 7224,
              "name": "PUSH",
              "source": 4,
              "value": "0"
            },
            {
              "begin": 630,
              "end": 7224,
              "name": "DUP1",
              "source": 4
            },
            {
              "begin": 630,
              "end": 7224,
              "name": "REVERT",
              "source": 4
            }
          ]
        }
      }
    },
    "methodIdentifiers": {}
  },
  "ewasm": {
    "wasm": ""
  },
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}